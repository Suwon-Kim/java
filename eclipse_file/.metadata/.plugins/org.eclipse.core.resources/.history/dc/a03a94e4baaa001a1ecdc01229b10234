import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Insets;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;

public class StudyMemo extends JFrame {
	public static final Dimension BTN_SIZE = new Dimension(50, 30);
	
	private Date date = new Date();
	
	private int curYear;
	private int curMonth;
	
	private JLabel lblToday;
	private JLabel lblSelect;
	
	private JPanel pnlCal;
	
	private JComboBox<String> cbYear;
	private JComboBox<String> cbMonth;
	
	private JButton btnCheck;
	private JButton  btnSearch;
	private JButton btnLeft;
	private JButton btnRight;
	private JButton btnToday;
	
	private JTextField tfInput;
	
	private String[] years = new String[61];
	private String[] months = {"1,","2","3","4","5","6","7","8","9","10","11","12"};
	
	private SimpleDateFormat sdf;
	
	private MyCalendar myCal;
	
	public StudyMemo() {
		init();
		setDisplay();
		addListeners();
		showFrame();
	}
	public int getCurrentYear() {
		return curYear;
	}
	public int getCurrentMonth() {
		return curMonth;
	}
	private void init() {
		Calendar cal = Calendar.getInstance();
		cal.setTime(date);
		
		curYear = cal.get(Calendar.YEAR);		//2020년
		curMonth = cal.get(Calendar.MONTH) + 1; //6월
		
		myCal = new MyCalendar(date, curYear, curMonth);
		
		sdf = new SimpleDateFormat("yyyy년 MM월 dd일 E요일");
		
		lblToday = new JLabel(sdf.format(date));
		lblToday.setFont(new Font(Font.DIALOG, Font.BOLD, 13));
		
		sdf = new SimpleDateFormat("yyyy.MM");
		lblSelect = new JLabel(sdf.format(date));
		lblSelect.setFont(new Font(Font.DIALOG, Font.BOLD, 24));
		
		btnLeft = new JButton("◀");
		btnLeft.setFont(new Font(Font.DIALOG, Font.BOLD, 20));
		btnLeft.setMargin(new Insets(0,0,0,0));
		
		btnRight = new JButton("▶");
		btnRight.setFont(new Font(Font.DIALOG, Font.BOLD, 20));
		btnRight.setMargin(new Insets(0,0,0,0));
		
		btnCheck = new JButton("조회");
		btnSearch = new JButton("검색");
		btnSearch.setToolTipText("파일 제목이나 태그로 검색 하세요");
		btnToday = new JButton("Today");
		
		tfInput = new JTextField(20);
		
		
		int idx = 0;
		//curYear = 2020
		//int i = 1990; i <= 2020; i++
		for(int i = curYear-30; i <= curYear + 30; i++) {
			years[idx] = String.valueOf(i);
			idx++;
		}
		
		cbYear = new JComboBox<String>(years);
		cbYear.setSelectedItem(String.valueOf(curYear)); //콤보박스 2020년 setting
		cbMonth = new JComboBox<String>(months);
		cbMonth.setSelectedItem(String.valueOf(curMonth));
		
	}
	private void setDisplay() {
		JPanel pnlNorth = new JPanel(new BorderLayout());
		
		JPanel pnlSelect = new JPanel();
		pnlSelect.add(btnLeft);
		pnlSelect.add(lblSelect);
		pnlSelect.add(btnRight);
		
		JPanel pnlCombo = new JPanel();
		pnlCombo.add(cbYear);
		pnlCombo.add(new JLabel("년"));
		pnlCombo.add(cbMonth);
		pnlCombo.add(new JLabel("월"));
		pnlCombo.add(btnCheck);
		
		JPanel pnlToday = new JPanel();
		pnlToday.setBorder(new EmptyBorder(10,0,30,240));
		JLabel lblSpace = new JLabel();
		
		pnlToday.add(lblToday);
		pnlToday.add(btnToday);
		
		pnlNorth.add(pnlToday, BorderLayout.NORTH);
		pnlNorth.add(pnlSelect, BorderLayout.CENTER);
		pnlNorth.add(pnlCombo, BorderLayout.SOUTH);
		
		pnlCal = myCal.getCalPanel();
		
		JPanel pnlSouth = new JPanel();
		JLabel lblImage = new JLabel();
		lblImage.setIcon(new ImageIcon("search.png"));
		
		pnlSouth.add(lblImage);
		pnlSouth.add(tfInput);
		pnlSouth.add(btnSearch);
		
		add(pnlNorth, BorderLayout.NORTH);
		add(pnlCal, BorderLayout.CENTER);
		add(pnlSouth, BorderLayout.SOUTH);
	}
	private void addListeners() {
		ActionListener aListener = (ae) -> {
			Object o = ae.getSource();
			
			if(o == btnLeft) {
				if(curMonth > 1) {
					curMonth--;
				} else {
					curMonth = 12;
					curYear--;
				}	
				setSelectedCalendar(curYear, curMonth);
			} else if (o == btnRight) {
				if(curMonth < 12) {
					curMonth++;
				} else {
					curMonth = 1;
					curYear++;
				}
				setSelectedCalendar(curYear, curMonth);
			} else if (o == btnCheck) {
				if(cbYear.getSelectedItem() == null || cbMonth.getSelectedItem() == null) {
					PleaseSelectDate();
				} else {
					int selectYear = Integer.parseInt((String)cbYear.getSelectedItem());
					int selectMonth = Integer.parseInt((String)cbMonth.getSelectedItem());
					
					if(!(curYear == selectYear && curMonth == selectMonth)) {
						curYear = Integer.parseInt((String) cbYear.getSelectedItem());
						curMonth = Integer.parseInt((String) cbMonth.getSelectedItem());
						
						setSelectedCalendar(curYear, curMonth);
						cbYear.setSelectedItem(null);
						cbMonth.setSelectedItem(null);
					}
					
				}
			}
		};
		
		btnLeft.addActionListener(aListener);
		btnRight.addActionListener(aListener);
		btnCheck.addActionListener(aListener);
		btnSearch.addActionListener(aListener);
		btnToday.addActionListener(aListener);
	}
	private void PleaseSelectDate() {
		JOptionPane.showConfirmDialog(this, "조회할 날짜를 빠짐없이 선택해주세요");
	}
	private void setSelectedCalendar(int year, int month) {
		Container c = getContentPane();
		c.remove(pnlCal);
		
		Calendar cal = Calendar.getInstance();
		cal.set(Calendar.YEAR, year);		//2022년
		
		cal.set(Calendar.MONTH, month-1);	//7월
		sdf = new SimpleDateFormat("yyyy.MM");
		lblSelect.setText(sdf.format(cal.getTime()));
		
		myCal = new MyCalendar(date, year, month);
		pnlCal = myCal.getCalPanel();
		
		add(pnlCal, BorderLayout.CENTER);
	}
	private void showFrame() {
		setTitle("나만의 스터디메모");
		setSize(500, 600);
		setResizable(false);
		setLocationRelativeTo(null);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setVisible(true);
	}
	public static void main(String[] args) {
		new StudyMemo();
	}
}